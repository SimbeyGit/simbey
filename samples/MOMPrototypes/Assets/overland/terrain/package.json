[
	{
		package: "json",
		name: "rules.json",
		data:
		{
			chaosNode:
			{
				smoothing: "SS1",
				same:
				[
					"chaosNode",
					"forest",
					"grasslands",
					"natureNode",
					"sorceryNode",
					"swamp",
					"volcano"
				],
				border:
				[
					"hills",
					"mountains",
					"river",
					"shore",
					"swamp",
					"tundra",
					"volcano"
				],
				transition: "shore"
			},
			desert:
			{
				smoothing: "SS161",
				same:
				[
					"desert"
				],
				border:
				[
					"chaosNode",
					"forest",
					"grasslands",
					"hills",
					"mountains",
					"natureNode",
					"river",
					"sorceryNode",
					"shore",
					"swamp",
					"tundra",
					"volcano"
				],
				transition: "shore"
			},
			forest:
			{
				smoothing: "SS1",
				same:
				[
					"chaosNode",
					"forest",
					"grasslands",
					"natureNode",
					"sorceryNode",
					"swamp",
					"volcano"
				],
				border:
				[
					"hills",
					"mountains",
					"river",
					"shore",
					"tundra"
				],
				transition: "shore"
			},
			grasslands:
			{
				smoothing: "SS1",
				same:
				[
					"chaosNode",
					"forest",
					"grasslands",
					"natureNode",
					"sorceryNode",
					"swamp",
					"volcano"
				],
				border:
				[
					"hills",
					"mountains",
					"river",
					"shore",
					"swamp",
					"tundra"
				],
				transition: "shore"
			},
			hills:
			{
				smoothing: "SS16",
				same:
				[
					"hills"
				],
				border:
				[
					"chaosNode",
					"forest",
					"grasslands",
					"mountains",
					"natureNode",
					"river",
					"sorceryNode",
					"shore",
					"swamp",
					"tundra",
					"volcano"
				],
				transition: "shore"
			},
			mountains:
			{
				smoothing: "SS16",
				same:
				[
					"mountains"
				],
				border:
				[
					"chaosNode",
					"forest",
					"grasslands",
					"hills",
					"natureNode",
					"river",
					"sorceryNode",
					"shore",
					"swamp",
					"tundra",
					"volcano"
				],
				transition: "shore"
			},
			natureNode:
			{
				smoothing: "SS1",
				same:
				[
					"chaosNode",
					"forest",
					"grasslands",
					"natureNode",
					"sorceryNode",
					"swamp",
					"volcano"
				],
				border:
				[
					"hills",
					"mountains",
					"river",
					"shore",
					"tundra"
				],
				transition: "shore"
			},
			ocean:
			{
				smoothing: "SS1",
				same:
				[
					"ocean",
					"shore"
				],
				tiles:
				[
					{
						key: "11111111",
						tile: "shore"
					}
				],
				transition: "shore"
			},
			river:
			{
				smoothing: "SS16",
				same:
				[
					"river",
					"shore"
				],
				border:
				[
					"chaosNode",
					"forest",
					"hills",
					"grasslands",
					"mountains",
					"natureNode",
					"sorceryNode",
					"swamp",
					"tundra",
					"volcano"
				],
				transition: "shore"
			},
			shore:
			{
				smoothing: "SS161EX",
				same:
				[
					"ocean",
					"shore"
				],
				border:
				[
					"chaosNode",
					"forest",
					"grasslands",
					"hills",
					"mountains",
					"natureNode",
					"sorceryNode",
					"swamp",
					"tundra",
					"volcano"
				],
				special:
				[
					"river"
				],
				tiles:
				[
					{
						key: "00000000",
						tile: "ocean"
					}
				]
			},
			sorceryNode:
			{
				smoothing: "SS1",
				same:
				[
					"chaosNode",
					"forest",
					"grasslands",
					"natureNode",
					"sorceryNode",
					"swamp",
					"volcano"
				],
				border:
				[
					"hills",
					"mountains",
					"river",
					"shore",
					"tundra"
				],
				transition: "shore"
			},
			swamp:
			{
				smoothing: "SS1",
				same:
				[
					"chaosNode",
					"forest",
					"grasslands",
					"natureNode",
					"sorceryNode",
					"swamp",
					"volcano"
				],
				border:
				[
					"hills",
					"mountains",
					"river",
					"shore",
					"tundra"
				],
				transition: "shore"
			},
			tundra:
			{
				smoothing: "SS161",
				same:
				[
					"tundra"
				],
				border:
				[
					"chaosNode",
					"forest",
					"grasslands",
					"hills",
					"mountains",
					"natureNode",
					"river",
					"sorceryNode",
					"shore",
					"swamp",
					"volcano"
				],
				transition: "shore"
			},
			volcano:
			{
				smoothing: "SS1",
				same:
				[
					"chaosNode",
					"forest",
					"grasslands",
					"natureNode",
					"sorceryNode",
					"swamp",
					"volcano"
				],
				border:
				[
					"hills",
					"mountains",
					"river",
					"shore",
					"tundra"
				],
				transition: "shore"
			}
		}
	},
	{
		package: "json",
		name: "generators.json",
		data:
		[
			{
				name: "Tiny",
				width: 32,
				height: 24,
				depth: 2,
				zone:
				{
					width: 3,
					height: 3
				},
				lairs:
				{
					normal: 6,
					weak: 8
				},
				towers:
				{
					count: 2,
					separation: 10
				},
				cities:
				{
					separation: 3,
					raiders: 5
				},
				rivers: 8,
				nodes: [4, 3]
			},
			{
				name: "Small",
				width: 48,
				height: 36,
				depth: 2,
				zone:
				{
					width: 5,
					height: 4
				},
				lairs:
				{
					normal: 14,
					weak: 18
				},
				towers:
				{
					count: 4,
					separation: 10
				},
				cities:
				{
					separation: 3,
					raiders: 10
				},
				rivers: 12,
				nodes: [9, 8]
			},
			{
				name: "Standard",
				width: 64,
				height: 48,
				depth: 2,
				zone:
				{
					width: 6,
					height: 5
				},
				lairs:
				{
					normal: 25,
					weak: 32
				},
				towers:
				{
					count: 6,
					separation: 10
				},
				cities:
				{
					separation: 3,
					raiders: 15
				},
				rivers: 20,
				nodes: [16, 14]
			},
			{
				name: "Large",
				width: 80,
				height: 60,
				depth: 2,
				zone:
				{
					width: 8,
					height: 6
				},
				lairs:
				{
					normal: 40,
					weak: 50
				},
				towers:
				{
					count: 9,
					separation: 10
				},
				cities:
				{
					separation: 3,
					raiders: 25
				},
				rivers: 30,
				nodes: [25, 22]
			},
			{
				name: "Huge",
				width: 96,
				height: 72,
				depth: 2,
				zone:
				{
					width: 10,
					height: 7
				},
				lairs:
				{
					normal: 55,
					weak: 70
				},
				towers:
				{
					count: 12,
					separation: 10
				},
				cities:
				{
					separation: 3,
					raiders: 35
				},
				rivers: 40,
				nodes: [36, 32]
			},
			{
				name: "Gigantic",
				width: 120,
				height: 90,
				depth: 2,
				zone:
				{
					width: 12,
					height: 9
				},
				lairs:
				{
					normal: 75,
					weak: 100
				},
				towers:
				{
					count: 16,
					separation: 10
				},
				cities:
				{
					separation: 3,
					raiders: 45
				},
				rivers: 40,
				nodes: [50, 42]
			},
			{
				name: "Epic",
				width: 144,
				height: 108,
				depth: 2,
				zone:
				{
					width: 14,
					height: 10
				},
				lairs:
				{
					normal: 80,
					weak: 110
				},
				towers:
				{
					count: 20,
					separation: 10
				},
				cities:
				{
					separation: 3,
					raiders: 50
				},
				rivers: 60,
				nodes: [60, 50]
			}
		]
	},
	{
		package: "json",
		name: "proportions.json",
		data:
		[
			{
				name: "Small",
				percentageOfMapIsLand: 15,
				percentageOfLandIsHills: 25,
				percentageOfHillsAreMountains: 45,
				tundraRowCount: 7,
				featureChance: [17, 10],
				blobs:
				[
					{
						tile: "forest",
						percentage: 17,
						eachAreaTileCount: 15
					},
					{
						tile: "desert",
						percentage: 11,
						eachAreaTileCount: 13
					},
					{
						tile: "swamp",
						percentage: 5,
						eachAreaTileCount: 7
					}
				]
			},
			{
				name: "Medium",
				percentageOfMapIsLand: 20,
				percentageOfLandIsHills: 25,
				percentageOfHillsAreMountains: 45,
				tundraRowCount: 7,
				featureChance: [17, 10],
				blobs:
				[
					{
						tile: "forest",
						percentage: 17,
						eachAreaTileCount: 15
					},
					{
						tile: "desert",
						percentage: 11,
						eachAreaTileCount: 13
					},
					{
						tile: "swamp",
						percentage: 5,
						eachAreaTileCount: 7
					}
				]
			},
			{
				name: "Large",
				percentageOfMapIsLand: 30,
				percentageOfLandIsHills: 25,
				percentageOfHillsAreMountains: 45,
				tundraRowCount: 7,
				featureChance: [17, 10],
				blobs:
				[
					{
						tile: "forest",
						percentage: 17,
						eachAreaTileCount: 15
					},
					{
						tile: "desert",
						percentage: 11,
						eachAreaTileCount: 13
					},
					{
						tile: "swamp",
						percentage: 5,
						eachAreaTileCount: 7
					}
				]
			},
			{
				name: "Huge",
				percentageOfMapIsLand: 45,
				percentageOfLandIsHills: 25,
				percentageOfHillsAreMountains: 45,
				tundraRowCount: 7,
				featureChance: [17, 10],
				blobs:
				[
					{
						tile: "forest",
						percentage: 17,
						eachAreaTileCount: 15
					},
					{
						tile: "desert",
						percentage: 11,
						eachAreaTileCount: 13
					},
					{
						tile: "swamp",
						percentage: 5,
						eachAreaTileCount: 7
					}
				]
			}
		]
	},
	{
		package: "json",
		name: "features.json",
		data:
		{
			mountains:
			{
				iron: [4,1],
				coal: [5,1],
				silver: [3,1],
				gold: [3,2],
				mithril: [3,3],
				adamantium: [0,2]
			},
			hills:
			{
				iron: [6,1],
				coal: [3,1],
				silver: [4,1],
				gold: [4,4],
				mithril: [1,2],
				adamantium: [0,1]
			},
			forest:
			{
				wildGame: [1,1]
			},
			desert:
			{
				gems: [2,1],
				quork: [1,3],
				crysx: [0,1]
			},
			swamp:
			{
				nightShade: [1,1]
			}
		}
	},
	{
		package: "json",
		name: "smoothing.json",
		data:
		{
			SS1:
			{
				description: "Single tile (no smoothing at all)"
				maxValueEachDirection: 0
			},
			SS16:
			{
				description: "16 tile set for linking together adjacent hills or mountains"
				maxValueEachDirection: 1,
				reductions:
				[
					{
						description:"Mountain lines are never drawn crossing corners - so if two adjacent edges are grass, assume the corner between is also grass",
						conditions:
						[
							{
								directions:[1,3],
								repetitions:2,
								value:1
							}
						],
						set:
						[
							{
								direction:2,
								value:1
							}
						]
					},
					{
						description:"Mountain lines are never drawn crossing corners - so if two adjacent edges are grass, assume the corner between is also grass",
						conditions:
						[
							{
								directions:[3,5],
								repetitions:2,
								value:1
							}
						],
						set:
						[
							{
								direction:4,
								value:1
							}
						]
					},
					{
						description:"Mountain lines are never drawn crossing corners - so if two adjacent edges are grass, assume the corner between is also grass",
						conditions:
						[
							{
								directions:[5,7],
								repetitions:2,
								value:1
							}
						],
						set:
						[
							{
								direction:6,
								value:1
							}
						]
					},
					{
						description:"Mountain lines are never drawn crossing corners - so if two adjacent edges are grass, assume the corner between is also grass",
						conditions:
						[
							{
								directions:[7,1],
								repetitions:2,
								value:1
							}
						],
						set:
						[
							{
								direction:8,
								value:1
							}
						]
					},
					{
						description:"Mountain lines are never drawn crossing corners - so if two adjacent edges are mountains, assume the corner between them is also mountains",
						conditions:
						[
							{
								directions:[1,3],
								repetitions:2,
								value:0
							}
						],
						set:
						[
							{
								direction:2,
								value:0
							}
						]
					},
					{
						description:"Mountain lines are never drawn crossing corners - so if two adjacent edges are mountains, assume the corner between them is also mountains",
						conditions:
						[
							{
								directions:[3,5],
								repetitions:2,
								value:0
							}
						],
						set:
						[
							{
								direction:4,
								value:0
							}
						]
					},
					{
						description:"Mountain lines are never drawn crossing corners - so if two adjacent edges are mountains, assume the corner between them is also mountains",
						conditions:
						[
							{
								directions:[5,7],
								repetitions:2,
								value:0
							}
						],
						set:
						[
							{
								direction:6,
								value:0
							}
						]
					},
					{
						description:"Mountain lines are never drawn crossing corners - so if two adjacent edges are mountains, assume the corner between them is also mountains",
						conditions:
						[
							{
								directions:[7,1],
								repetitions:2,
								value:0
							}
						],
						set:
						[
							{
								direction:8,
								value:0
							}
						]
					},
					{
						description:"Mountain lines are never drawn crossing corners - so if one edge is mountains and an adjacent edge is grass, assume the corner between them is also grass",
						conditions:
						[
							{
								directions:[1],
								repetitions:1,
								value:1
							},
							{
								directions:[3],
								repetitions:1,
								value:0
							}
						],
						set:
						[
							{
								direction:2,
								value:1
							}
						]
					},
					{
						description:"Mountain lines are never drawn crossing corners - so if one edge is mountains and an adjacent edge is grass, assume the corner between them is also grass",
						conditions:
						[
							{
								directions:[3],
								repetitions:1,
								value:1
							},
							{
								directions:[5],
								repetitions:1,
								value:0
							}
						],
						set:
						[
							{
								direction:4,
								value:1
							}
						]
					},
					{
						description:"Mountain lines are never drawn crossing corners - so if one edge is mountains and an adjacent edge is grass, assume the corner between them is also grass",
						conditions:
						[
							{
								directions:[5],
								repetitions:1,
								value:1
							},
							{
								directions:[7],
								repetitions:1,
								value:0
							}
						],
						set:
						[
							{
								direction:6,
								value:1
							}
						]
					},
					{
						description:"Mountain lines are never drawn crossing corners - so if one edge is mountains and an adjacent edge is grass, assume the corner between them is also grass",
						conditions:
						[
							{
								directions:[7],
								repetitions:1,
								value:1
							},
							{
								directions:[1],
								repetitions:1,
								value:0
							}
						],
						set:
						[
							{
								direction:8,
								value:1
							}
						]
					},
					{
						description:"Mountain lines are never drawn crossing corners - so if one edge is mountains and an adjacent edge is grass, assume the corner between them is also grass",
						conditions:
						[
							{
								directions:[1],
								repetitions:1,
								value:0
							},
							{
								directions:[3],
								repetitions:1,
								value:1
							}
						],
						set:
						[
							{
								direction:2,
								value:1
							}
						]
					},
					{
						description:"Mountain lines are never drawn crossing corners - so if one edge is mountains and an adjacent edge is grass, assume the corner between them is also grass",
						conditions:
						[
							{
								directions:[3],
								repetitions:1,
								value:0
							},
							{
								directions:[5],
								repetitions:1,
								value:1
							}
						],
						set:
						[
							{
								direction:4,
								value:1
							}
						]
					},
					{
						description:"Mountain lines are never drawn crossing corners - so if one edge is mountains and an adjacent edge is grass, assume the corner between them is also grass",
						conditions:
						[
							{
								directions:[5],
								repetitions:1,
								value:0
							},
							{
								directions:[7],
								repetitions:1,
								value:1
							}
						],
						set:
						[
							{
								direction:6,
								value:1
							}
						]
					},
					{
						description:"Mountain lines are never drawn crossing corners - so if one edge is mountains and an adjacent edge is grass, assume the corner between them is also grass",
						conditions:
						[
							{
								directions:[7],
								repetitions:1,
								value:0
							},
							{
								directions:[1],
								repetitions:1,
								value:1
							}
						],
						set:
						[
							{
								direction:8,
								value:1
							}
						]
					}
				]
			},
			SS161:
			{
				description: "161 tile set for converting edges of water, desert and tundra to grass to smooth edges",
				maxValueEachDirection: 1,
				reductions:
				[
					{
						description:"If two adjacent edges are land, the corner between them must also be land",
						conditions:
						[
							{
								directions:[1,3],
								repetitions:2,
								value:1
							}
						],
						set:
						[
							{
								direction:2,
								value:1
                        			}
                				]
        				},
        				{
						description:"If two adjacent edges are land, the corner between them must also be land",
						conditions:
						[
							{
								directions:[3,5],
								repetitions:2,
								value:1
							}
						],
						set:
						[
							{
								direction:4,
								value:1
							}
						]
					},
					{
						description:"If two adjacent edges are land, the corner between them must also be land",
						conditions:
						[
							{
								directions:[5,7],
								repetitions:2,
								value:1
							}
						],
						set:
						[
							{
								direction:6,
								value:1
							}
						]
					},
					{
						description:"If two adjacent edges are land, the corner between them must also be land",
						conditions:
						[
							{
								directions:[7,1],
								repetitions:2,
								value:1
							}
						],
						set:
						[
							{
								direction:8,
								value:1
							}
						]
					}
				]
			},
			SS161EX:
			{
				description: "Extended version of 161 tile set, with river mouths added"
				maxValueEachDirection: 2,
				reductions:
				[
					{
						description:"No corner rivers, so replace corner rivers by grass",
						conditions:
						[
							{
								directions:[2],
								repetitions:1,
								value:2
							},
							{
								directions:[2],
								repetitions:1,
								value:2
							}
						],
						set:
						[
							{
								direction:2,
								value:1
							}
						]
					},
					{
						description:"No corner rivers, so replace corner rivers by grass",
						conditions:
						[
							{
								directions:[4],
								repetitions:1,
								value:2
							},
							{
								directions:[4],
								repetitions:1,
								value:2
							}
						],
						set:
						[
							{
								direction:4,
								value:1
							}
						]
					},
					{
						description:"No corner rivers, so replace corner rivers by grass",
						conditions:
						[
							{
								directions:[6],
								repetitions:1,
								value:2
							},
							{
								directions:[6],
								repetitions:1,
								value:2
							}
						],
						set:
						[
							{
								direction:6,
								value:1
							}
						]
					},
					{
						description:"No corner rivers, so replace corner rivers by grass",
						conditions:
						[
							{
								directions:[8],
								repetitions:1,
								value:2
							},
							{
								directions:[8],
								repetitions:1,
								value:2
							}
						],
						set:
						[
							{
								direction:8,
								value:1
							}
						]
					},
					{
						description:"If two adjacent edges are land (grass or river), the corner between them must also be land",
						conditions:
						[
							{
								directions:[1],
								repetitions:1,
								value:12
							},
							{
								directions:[3],
								repetitions:1,
								value:12
							}
						],
						set:
						[
							{
								direction:2,
								value:1
							}
						]
					},
					{
						description:"If two adjacent edges are land (grass or river), the corner between them must also be land",
						conditions:
						[
							{
								directions:[3],
								repetitions:1,
								value:12
							},
							{
								directions:[5],
								repetitions:1,
								value:12
							}
						],
						set:
						[
							{
								direction:4,
								value:1
							}
						]
					},
					{
						description:"If two adjacent edges are land (grass or river), the corner between them must also be land",
						conditions:
						[
							{
								directions:[5],
								repetitions:1,
								value:12
							},
							{
								directions:[7],
								repetitions:1,
								value:12
							}
						],
						set:
						[
							{
								direction:6,
								value:1
							}
						]
					},
					{
						description:"If two adjacent edges are land (grass or river), the corner between them must also be land",
						conditions:
						[
							{
								directions:[7],
								repetitions:1,
								value:12
							},
							{
								directions:[1],
								repetitions:1,
								value:12
							}
						],
						set:
						[
							{
								direction:8,
								value:1
							}
						]
					},
					{
						description:"Lakes (single ocean squares surrounded by land) can only ever have a single river leading from them",
						conditions:
						[
							{
								directions:[1,3,5,7],
								repetitions:0,
								value:0
							},
							{
								directions:[1],
								repetitions:1,
								value:2
							}
						],
						set:
						[
							{
								direction:3,
								value:1
							}
						]
					},
					{
						description:"Lakes (single ocean squares surrounded by land) can only ever have a single river leading from them",
						conditions:
						[
							{
								directions:[1,3,5,7],
								repetitions:0,
								value:0
							},
							{
								directions:[1],
								repetitions:1,
								value:2
							}
						],
						set:
						[
							{
								direction:5,
								value:1
							}
						]
					},
					{
						description:"Lakes (single ocean squares surrounded by land) can only ever have a single river leading from them",
						conditions:
						[
							{
								directions:[1,3,5,7],
								repetitions:0,
								value:0
							},
							{
								directions:[1],
								repetitions:1,
								value:2
							}
						],
						set:
						[
							{
								direction:7,
								value:1
							}
						]
					},
					{
						description:"Lakes (single ocean squares surrounded by land) can only ever have a single river leading from them",
						conditions:
						[
							{
								directions:[1,3,5,7],
								repetitions:0,
								value:0
							},
							{
								directions:[3],
								repetitions:1,
								value:2
							}
						],
						set:
						[
							{
								direction:5,
								value:1
							}
						]
					},
					{
						description:"Lakes (single ocean squares surrounded by land) can only ever have a single river leading from them",
						conditions:
						[
							{
								directions:[1,3,5,7],
								repetitions:0,
								value:0
							},
							{
								directions:[3],
								repetitions:1,
								value:2
							}
						],
						set:
						[
							{
								direction:7,
								value:1
							}
						]
					},
					{
						description:"Lakes (single ocean squares surrounded by land) can only ever have a single river leading from them",
						conditions:
						[
							{
								directions:[1,3,5,7],
								repetitions:0,
								value:0
							},
							{
								directions:[5],
								repetitions:1,
								value:2
							}
						],
						set:
						[
							{
								direction:7,
								value:1
							}
						]
					},
					{
						description:"Alcoves (ocean square with only single adjacent ocean square) can only ever have a single river leading from them",
						conditions:
						[
							{
								directions:[7,1,3],
								repetitions:0,
								value:0
							},
							{
								directions:[5],
								repetitions:1,
								value:0
							},
							{
								directions:[1],
								repetitions:1,
								value:2
							}
						],
						set:
						[
							{
								direction:7,
								value:1
							},
							{
								direction:3,
								value:1
							}
						]
					},
					{
						description:"Alcoves (ocean square with only single adjacent ocean square) can only ever have a single river leading from them",
						conditions:
						[
							{
								directions:[7,1,3],
								repetitions:0,
								value:0
							},
							{
								directions:[5],
								repetitions:1,
								value:0
							},
							{
								directions:[7],
								repetitions:1,
								value:2
							}
						],
						set:
						[
							{
								direction:1,
								value:1
							},
							{
								direction:3,
								value:1
							}
						]
					},
					{
						description:"Alcoves (ocean square with only single adjacent ocean square) can only ever have a single river leading from them",
						conditions:
						[
							{
								directions:[7,1,3],
								repetitions:0,
								value:0
							},
							{
								directions:[5],
								repetitions:1,
								value:0
							},
							{
								directions:[3],
								repetitions:1,
								value:2
							}
						],
						set:
						[
							{
								direction:7,
								value:1
							},
							{
								direction:1,
								value:1
							}
						]
					},
					{
						description:"Alcoves (ocean square with only single adjacent ocean square) can only ever have a single river leading from them",
						conditions:
						[
							{
								directions:[1,3,5],
								repetitions:0,
								value:0
							},
							{
								directions:[7],
								repetitions:1,
								value:0
							},
							{
								directions:[3],
								repetitions:1,
								value:2
							}
						],
						set:
						[
							{
								direction:1,
								value:1
							},
							{
								direction:5,
								value:1
							}
						]
					},
					{
						description:"Alcoves (ocean square with only single adjacent ocean square) can only ever have a single river leading from them",
						conditions:
						[
							{
								directions:[1,3,5],
								repetitions:0,
								value:0
							},
							{
								directions:[7],
								repetitions:1,
								value:0
							},
							{
								directions:[1],
								repetitions:1,
								value:2
							}
						],
						set:
						[
							{
								direction:3,
								value:1
							},
							{
								direction:5,
								value:1
							}
						]
					},
					{
						description:"Alcoves (ocean square with only single adjacent ocean square) can only ever have a single river leading from them",
						conditions:
						[
							{
								directions:[1,3,5],
								repetitions:0,
								value:0
							},
							{
								directions:[7],
								repetitions:1,
								value:0
							},
							{
								directions:[5],
								repetitions:1,
								value:2
							}
						],
						set:
						[
							{
								direction:1,
								value:1
							},
							{
								direction:3,
								value:1
							}
						]
					},
					{
						description:"Alcoves (ocean square with only single adjacent ocean square) can only ever have a single river leading from them",
						conditions:
						[
							{
								directions:[3,5,7],
								repetitions:0,
								value:0
							},
							{
								directions:[1],
								repetitions:1,
								value:0
							},
							{
								directions:[5],
								repetitions:1,
								value:2
							}
						],
						set:
						[
							{
								direction:3,
								value:1
							},
							{
								direction:7,
								value:1
							}
						]
					},
					{
						description:"Alcoves (ocean square with only single adjacent ocean square) can only ever have a single river leading from them",
						conditions:
						[
							{
								directions:[3,5,7],
								repetitions:0,
								value:0
							},
							{
								directions:[1],
								repetitions:1,
								value:0
							},
							{
								directions:[3],
								repetitions:1,
								value:2
							}
						],
						set:
						[
							{
								direction:5,
								value:1
							},
							{
								direction:7,
								value:1
							}
						]
					},
					{
						description:"Alcoves (ocean square with only single adjacent ocean square) can only ever have a single river leading from them",
						conditions:
						[
							{
								directions:[3,5,7],
								repetitions:0,
								value:0
							},
							{
								directions:[1],
								repetitions:1,
								value:0
							},
							{
								directions:[7],
								repetitions:1,
								value:2
							}
						],
						set:
						[
							{
								direction:3,
								value:1
							},
							{
								direction:5,
								value:1
							}
						]
					},
					{
						description:"Alcoves (ocean square with only single adjacent ocean square) can only ever have a single river leading from them",
						conditions:
						[
							{
								directions:[5,7,1],
								repetitions:0,
								value:0
							},
							{
								directions:[3],
								repetitions:1,
								value:0
							},
							{
								directions:[7],
								repetitions:1,
								value:2
							}
						],
						set:
						[
							{
								direction:5,
								value:1
							},
							{
								direction:1,
								value:1
							}
						]
					},
					{
						description:"Alcoves (ocean square with only single adjacent ocean square) can only ever have a single river leading from them",
						conditions:
						[
							{
								directions:[5,7,1],
								repetitions:0,
								value:0
							},
							{
								directions:[3],
								repetitions:1,
								value:0
							},
							{
								directions:[5],
								repetitions:1,
								value:2
							}
						],
						set:
						[
							{
								direction:7,
								value:1
							},
							{
								direction:1,
								value:1
							}
						]
					},
					{
						description:"Alcoves (ocean square with only single adjacent ocean square) can only ever have a single river leading from them",
						conditions:
						[
							{
								directions:[5,7,1],
								repetitions:0,
								value:0
							},
							{
								directions:[3],
								repetitions:1,
								value:0
							},
							{
								directions:[1],
								repetitions:1,
								value:2
							}
						],
						set:
						[
							{
								direction:5,
								value:1
							},
							{
								direction:7,
								value:1
							}
						]
					},
					{
						description:"Wide rivers (ocean squares with two adjacent and opposite ocean squares) can only ever have a single river leading from them",
						conditions:
						[
							{
								directions:[1,5],
								repetitions:2,
								value:0
							},
							{
								directions:[3,7],
								repetitions:0,
								value:0
							},
							{
								directions:[3],
								repetitions:1,
								value:2
							}
						],
						set:
						[
							{
								direction:7,
								value:1
							}
						]
					},
					{
						description:"Wide rivers (ocean squares with two adjacent and opposite ocean squares) can only ever have a single river leading from them",
						conditions:
						[
							{
								directions:[1,5],
								repetitions:2,
								value:0
							},
							{
								directions:[3,7],
								repetitions:0,
								value:0
							},
							{
								directions:[7],
								repetitions:1,
								value:2
							}
						],
						set:
						[
							{
								direction:3,
								value:1
							}
						]
					},
					{
						description:"Wide rivers (ocean squares with two adjacent and opposite ocean squares) can only ever have a single river leading from them",
						conditions:
						[
							{
								directions:[3,7],
								repetitions:2,
								value:0
							},
							{
								directions:[1,5],
								repetitions:0,
								value:0
							},
							{
								directions:[1],
								repetitions:1,
								value:2
							}
						],
						set:
						[
							{
								direction:5,
								value:1
							}
						]
					},
					{
						description:"Wide rivers (ocean squares with two adjacent and opposite ocean squares) can only ever have a single river leading from them",
						conditions:
						[
							{
								directions:[3,7],
								repetitions:2,
								value:0
							},
							{
								directions:[1,5],
								repetitions:0,
								value:0
							},
							{
								directions:[5],
								repetitions:1,
								value:2
							}
						],
						set:
						[
							{
								direction:1,
								value:1
							}
						]
					},
					{
						description:"Corners with a tiny land piece opposite can't have rivers, so delete any rivers found",
						conditions:
						[
							{
								directions:[1,3,6],
								repetitions:0,
								value:0
							},
							{
								directions:[5,7],
								repetitions:2,
								value:0
							}
						],
						set:
						[
							{
								direction:1,
								value:1
							},
							{
								direction:3,
								value:1
							}
						]
					},
					{
						description:"Corners with a tiny land piece opposite can't have rivers, so delete any rivers found",
						conditions:
						[
							{
								directions:[3,5,8],
								repetitions:0,
								value:0
							},
							{
								directions:[1,7],
								repetitions:2,
								value:0
							}
						],
						set:
						[
							{
								direction:3,
								value:1
							},
							{
								direction:5,
								value:1
							}
						]
					},
					{
						description:"Corners with a tiny land piece opposite can't have rivers, so delete any rivers found",
						conditions:
						[
							{
								directions:[5,7,2],
								repetitions:0,
								value:0
							},
							{
								directions:[1,3],
								repetitions:2,
								value:0
							}
						],
						set:
						[
							{
								direction:5,
								value:1
							},
							{
								direction:7,
								value:1
							}
						]
					},
					{
						description:"Corners with a tiny land piece opposite can't have rivers, so delete any rivers found",
						conditions:
						[
							{
								directions:[7,1,4],
								repetitions:0,
								value:0
							},
							{
								directions:[3,5],
								repetitions:2,
								value:0
							}
						],
						set:
						[
							{
								direction:7,
								value:1
							},
							{
								direction:1,
								value:1
							}
						]
					},
					{
						description:"Single sided river mouths (with ocean on the other 3 edges) with a tiny land piece on either/both opposing corners cannot have a river, so delete the river",
						conditions:
						[
							{
								directions:[1,4],
								repetitions:0,
								value:0
							},
							{
								directions:[3,5,7],
								repetitions:3,
								value:0
							}
						],
						set:
						[
							{
								direction:1,
								value:1
							}
						]
					},
					{
						description:"Single sided river mouths (with ocean on the other 3 edges) with a tiny land piece on either/both opposing corners cannot have a river, so delete the river",
						conditions:
						[
							{
								directions:[1,6],
								repetitions:0,
								value:0
							},
							{
								directions:[3,5,7],
								repetitions:3,
								value:0
							}
						],
						set:
						[
							{
								direction:1,
								value:1
							}
						]
					},
					{
						description:"Single sided river mouths (with ocean on the other 3 edges) with a tiny land piece on either/both opposing corners cannot have a river, so delete the river",
						conditions:
						[
							{
								directions:[3,6],
								repetitions:0,
								value:0
							},
							{
								directions:[1,5,7],
								repetitions:3,
								value:0
							}
						],
						set:
						[
							{
								direction:3,
								value:1
							}
						]
					},
					{
						description:"Single sided river mouths (with ocean on the other 3 edges) with a tiny land piece on either/both opposing corners cannot have a river, so delete the river",
						conditions:
						[
							{
								directions:[3,8],
								repetitions:0,
								value:0
							},
							{
								directions:[1,5,7],
								repetitions:3,
								value:0
							}
						],
						set:
						[
							{
								direction:3,
								value:1
							}
						]
					},
					{
						description:"Single sided river mouths (with ocean on the other 3 edges) with a tiny land piece on either/both opposing corners cannot have a river, so delete the river",
						conditions:
						[
							{
								directions:[5,8],
								repetitions:0,
								value:0
							},
							{
								directions:[1,3,7],
								repetitions:3,
								value:0
							}
						],
						set:
						[
							{
								direction:5,
								value:1
							}
						]
					},
					{
						description:"Single sided river mouths (with ocean on the other 3 edges) with a tiny land piece on either/both opposing corners cannot have a river, so delete the river",
						conditions:
						[
							{
								directions:[5,2],
								repetitions:0,
								value:0
							},
							{
								directions:[1,3,7],
								repetitions:3,
								value:0
							}
						],
						set:
						[
							{
								direction:5,
								value:1
							}
						]
					},
					{
						description:"Single sided river mouths (with ocean on the other 3 edges) with a tiny land piece on either/both opposing corners cannot have a river, so delete the river",
						conditions:
						[
							{
								directions:[7,2],
								repetitions:0,
								value:0
							},
							{
								directions:[1,3,5],
								repetitions:3,
								value:0
							}
						],
						set:
						[
							{
								direction:7,
								value:1
							}
						]
					},
					{
						description:"Single sided river mouths (with ocean on the other 3 edges) with a tiny land piece on either/both opposing corners cannot have a river, so delete the river",
						conditions:
						[
							{
								directions:[7,4],
								repetitions:0,
								value:0
							},
							{
								directions:[1,3,5],
								repetitions:3,
								value:0
							}
						],
						set:
						[
							{
								direction:7,
								value:1
							}
						]
					}
				]
			}
		}
	}
]